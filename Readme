Patches welcome! If you have tools you use frequently, send them to arc@akkartik.com

- Features so far
$ for escaping to scheme
Extensible coerce (rntz; http://arclanguage.org/item?id=9828)
http://awwx.ws/defarc
http://awwx.ws/implicit

Generic functions that read from vtables* and dispatch on the type of the _last_ arg.
There are 4 refinements regarding what to do when there's no entry in vtables*
  defgeneric: coerce last arg to cons
  defgeneric*: coerce _all_ args to cons
  deftransform: coerce last arg to cons, coerce back to its original type afterward
  deftransform*: coerce all args to cons, coerce back to original type afterward
  (Previous discussions: http://arclanguage.org/item?id=11779, http://arclanguage.org/item?id=11865)
some, all, mem, trues, keep, rem, len, iso are now all generic.

pervasive keyword args. If a function's args are (a b c), (:c 3 1 2) => (1 2 3), etc.
new arglist syntax. (a b ? c d . e) => c, d are optional, e is a rest/body arg.

srv:
  parse IP from X-Forwarded-For
  allow nested paths to be accessed inside arc/static
  more mime-types, more html attributes, more useful logging

Bugfixes (http://arclanguage.org/item?id=10830, each on tables returns nil)
Case can work on lists and other compounds

- Incompatibilities and gotchas
1. nil == (); type.nil == nil.
2. Optional args have a new syntax. (a (o b) (o c 3)) => (a ? b nil c 3)
3. some and keep don't testify.
4. Always handle null values when defining a generic
5. srv no longer calls setuid. Run it behind apache or nginx, never as root.
